Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
La captura está compuesta por 954 paquetes
* ¿Cuánto tiempo dura la captura?
Tiene una duración de 56,149345 segundos
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
La máquina tiene la IP 192.168.1.34, que es una IP privada ya que está en el rango de 192.168.0.0/16

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
Es mayor el tráfico en UDP, y tiene sentido ya que una aplicación en tiempo real usa este protocolo al ser más eficaz en el tiempo real, evitando reenvíos como TCP
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
Los protocolos con señal son SIP y RTP, y RTCP que es necesario para el uso de RTP. Después hay otros protocolos como DNS, ICMP o ARP que son ruido.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
Hay paquetes SIP en los segundos 7, 14, 16, 38, 39 y 55
* Y los paquetes con RTP, ¿cuándo se envı́an?
Los paquetes con RTP se envían en los segundos 17 a 21 y 23 a 38
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
Son paquetes de DNS, que es un servicio donde el servidor responde al cliente con la dirección IP del dominio que el cliente pide.
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
La dirección IP del servidor DNS es 80.58.61.250
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
La respuesta contiene la dirección IP 86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
Está pidiendo la url http://ekiga.net/ip/
* ¿Qué user agent (UA) la está pidiendo?
La está pidiendo el UA en 192.168.1.34
* ¿Qué devuelve el servidor?
El servidor está respondiendo con una dirección IP, la 83.36.48.212
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
Está respondiendo con la IP con la que el servidor nos ve, que no corresponde con la nuestra, por lo tanto significa que estamos tras una red NAT

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
Para conocer el tipo de red NAT tras el que se encuentra una máquina, ya que puede haber problemas en el envío de paquetes hacia el usuario que usa NAT.
* ¿Podrı́as decir si estamos tras un NAT o no?
Al usar STUN, sabemos que estamos tras un NAT.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
Tiene la dirección 86.64.162.35
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
Se envían al puerto 5060
* ¿Qué método SIP utiliza el UA para registrarse?
Usa el método REGISTER
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
Entiende las instrucciones INVITE, ACK, BYE, OPTIONS, CANCEL
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
No, no se registra correctamente en el primer intento.
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
Sabemos que no se ha realizado correctmente con la respuestas del servidor 401 Unauthorized
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
En el segundo tenemos el campo Authorization, donde incluye información como el usuario, realm y nonce para poder registrarse.
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
La sesión expira en 3600 segundos.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
Sí, llama Gregorio Robles desde la dirección grex@ekiga.net
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
Contiene datos en el protocolo SDP, sobre todo atributos sobre diferentes medios audiovisuales.
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
No tiene éxito, que se puede ver por la respuesta 407 Proxy Authentication required.
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
En el segundo mensaje incluye el campo Proxy-Authorization

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
Se utiliza el protocolo RTP, que sirve para el transporte de datos multimedia en UDP, y H261, que es un formato de codificación de vídeo.
* ¿Cuál es el tamaño de paquete de los mismos?
El tamaño de los paquetes con el protocolo RTP es de 214 bytes.
* ¿Se utilizan bits de padding?
No se utilizan bits de padding.
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
En origen se envía un paquete cada 160bytes, o 20ms
* ¿Cuántos bits/segundo se envı́an?
Si cada 20ms se envían 1560bytes (payload), se tiene una velocidad de 64kbps
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
Hay dos flujos diferentes, ya que algunos van al puerto 12440 y otros al 19062
* ¿Cuántos paquetes se pierden?
Se pierde un paquete en reverse
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
El valor máximo de Delta es de 1290.44ms, esto indica la diferencia máxima de tiempo entre dos paquetes en algún momento de la comunicación.
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
El valor medio del jitter es de 42.50ms y el máximo de 119.64ms. Visto el valor medio, se podría decir que estamos en una conversación de calidad, ya que el valor no es elevado.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
Para el primer paquete la delta y el jitter valen 0.
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
No, solo sabemos que es el primero que nos ha llegado, ya que el numero de secuencia es aleatorio y no sabemos cual debería ser el primero.
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
En el 247 el jitter aumenta hasta 38,82ms
* ¿A qué se debe el cambio tan brusco del jitter?
A un cambio del ancho de banda, haciendo que el receptor reciba los siguientes paquetes de golpe, con el mismo jitter pero diferente delta.
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
En el paquete 247 es mucho más alta la delta, a causa del buffer que se crea por el cambio de ancho de banda.


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
Dura 24 segundos.
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
Se utiliza el método BYE
* ¿En qué trama(s)?
En las tramas 924, 925, 927 y 933
* ¿Por qué crees que se envı́a varias veces?
Lo reenvía al no recibir el ACK del servidor

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
Porque al no haber expirado el tiempo que el servidor guarda información sobre el cliente, este envía un REGISTER con Expires igual a 0 para ser eliminado.
* ¿En qué trama sucede esto?
En la trama 952
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
En el valor de Expires.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

